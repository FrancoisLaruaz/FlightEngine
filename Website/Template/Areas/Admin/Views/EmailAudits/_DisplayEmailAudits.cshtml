@model Models.ViewModels.Admin.Email.DisplayEmailAuditViewModel
@using Commons.Extensions;



<div class="table-responsive">
    <div class="pull-right">
        <p style="font-weight:bold">@Model.Count [[[row(s) found]]]</p>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>[[[Id]]]</th>
                <th>[[[Date]]]</th>
                <th>[[[Type]]]</th>
                <th>[[[To]]]</th>
                <th>[[[User]]]</th>
                <th>[[[Comment]]]</th>
                <th>[[[Language]]]</th>
                <th>[[[Attachments]]]</th>
                <th>[[[CC]]]</th>
                <th>[[[Status]]]</th>
            </tr>
        </thead>

        @foreach (var item in Model.AuditsList)
        {


            <tr>
                <td>@item.Id</td>
                <td>@Commons.FormaterHelper.GetFormatStringForDateDisplay(@item.Date)</td>
                <td>@item.EMailTypeName.SpaceBeforeCapitals()</td>
                <td><span title="[[[Email from ]]]@item.EMailFromDecrypt">@item.EMailToDecrypt</span></td>
                <td title="UserId : @item.UserId">@item.UserFirstNameDecrypt @item.UserLastNameDecrypt</td>
                <td>@item.CommentToDisplay</td>
                <td>@item.LanguageName</td>
                <td>@item.AttachmentNumber</td>
                <td>@item.CCUsersNumber</td>
                <td>
                    @if (item.EmailSent)
                    {
                        if (item.EmailWatcherStatusId == CommonsConst.EmailWatcherStatus.NotWatched)
                        {
                        <span class="glyphicon glyphicon-send mailIcon" style="color:green;" title="[[[Email sent (no 'watcher' information available)]]]"></span>
                        }
                        else if (item.EmailWatcherStatusId == CommonsConst.EmailWatcherStatus.EmailNotOpened)
                        {
                        <span class="glyphicon glyphicon-eye-close mailIcon" style="color:orange" title="[[[Email sent but not opened]]]"></span>
                        }
                        else if (item.EmailWatcherStatusId == CommonsConst.EmailWatcherStatus.EmailOpened)
                        {
                        <span class="glyphicon glyphicon-eye-open mailIcon" style="color:green" title="[[[Email opened at ]]]@Commons.FormaterHelper.GetFormatStringForDateDisplay(@item.EmailOpenedDate.Value.ToLocalTime())"></span>
                        }
                        else if (item.EmailWatcherStatusId == CommonsConst.EmailWatcherStatus.LinkClicked)
                        {
                        <span class="glyphicon glyphicon glyphicon-ok mailIcon" style="color:green" title="[[[Link clicked at ]]]@Commons.FormaterHelper.GetFormatStringForDateDisplay(@item.EmailLinkClickedDate.Value.ToLocalTime())"></span>
                        }
                        else
                        {
                        <span class="glyphicon glyphicon-question-sign mailIcon" title="[[[Mail sent but unknown status]]]"></span>
                        }
                    }
                    else
                    {
                    <span class="glyphicon glyphicon-remove mailIcon" style="color:red" title="[[[Email not sent]]]"></span>
                    }
                </td>
            </tr>
        }

    </table>
</div>

@using (Html.BeginForm("_DisplayEmailAudits", "EmailAudits", FormMethod.Post, new { id = "_pager" }))
{
    @Html.Partial("_Pager")
    @Html.HiddenFor(m => m.Pattern)
}

<script>
    $(document).ready(function () {
        HideSpinner();
    });

</script>
